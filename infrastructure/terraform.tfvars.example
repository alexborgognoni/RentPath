# ==============================================================================
# EXAMPLE CONFIGURATION FOR RENTPATH INFRASTRUCTURE
# ==============================================================================
#
# Copy this file to terraform.tfvars and customize the values for your environment
#
# IMPORTANT: Sensitive values are managed via AWS Secrets Manager.
# Before running terraform, ensure these secrets are created:
# - {project_name}-{environment}/app-key
# - {project_name}-{environment}/database-config
# - {project_name}-{environment}/app-config
# - {project_name}-{environment}/codestar-connection
#
# ==============================================================================

# Project Configuration
project_name = "rentpath"
environment  = "production"  # dev, test, staging, production
aws_region   = "eu-central-1"

# Network Configuration
# Replace with your actual VPC and subnet IDs
vpc_id = "vpc-xxxxxxxxx"
public_subnet_ids = [
  "subnet-xxxxxxxxx",  # AZ-a
  "subnet-xxxxxxxxx",  # AZ-b
  "subnet-xxxxxxxxx"   # AZ-c
]
private_subnet_ids = [
  "subnet-xxxxxxxxx",  # AZ-a
  "subnet-xxxxxxxxx",  # AZ-b
  "subnet-xxxxxxxxx"   # AZ-c
]

# Elastic Beanstalk Configuration
eb_solution_stack = "64bit Amazon Linux 2023 v4.7.5 running PHP 8.4"
eb_instance_type  = "t3.medium"  # t3.micro for dev, t3.medium+ for production
eb_min_size       = 1
eb_max_size       = 5            # Adjust based on expected load

# Application Configuration
app_debug = "false"  # Set to "true" for development environments

# Database Configuration
rds_engine                  = "mysql"
rds_engine_version          = "8.0"
rds_instance_class          = "db.t3.micro"    # db.t3.micro for dev, larger for production
db_allocated_storage        = 20               # GB
db_max_allocated_storage    = 100              # GB (auto-scaling limit)
rds_backup_retention_period = 7                # Days
rds_multi_az                = false            # Set to true for production HA
rds_deletion_protection     = true             # Set to false for dev environments

# S3 Configuration
s3_versioning_enabled   = true
s3_create_backup_bucket = true

# CodePipeline Configuration
github_repo   = "your-username/your-repo"  # Format: owner/repository
github_branch = "main"                     # Branch to deploy from

# ==============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES:
# ==============================================================================

# DEVELOPMENT ENVIRONMENT:
# environment = "dev"
# eb_instance_type = "t3.micro"
# eb_max_size = 2
# rds_instance_class = "db.t3.micro"
# rds_multi_az = false
# rds_deletion_protection = false
# app_debug = "true"

# STAGING ENVIRONMENT:
# environment = "staging"
# eb_instance_type = "t3.small"
# eb_max_size = 3
# rds_instance_class = "db.t3.small"
# rds_multi_az = false
# rds_deletion_protection = true

# PRODUCTION ENVIRONMENT:
# environment = "production"
# eb_instance_type = "t3.medium"
# eb_max_size = 10
# rds_instance_class = "db.t3.small"
# rds_multi_az = true
# rds_deletion_protection = true
# db_allocated_storage = 50
# db_max_allocated_storage = 500